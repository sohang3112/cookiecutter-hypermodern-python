name: Publish on Release

on:
  release:
    types:
      - published
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.1
        with:
          version-command: uv run --dev toml get --toml-path pyproject.toml project.version

      - name: Bump version for developmental release
        if: "! steps.check-version.outputs.tag"
        run: |
          version=$(uv run --dev toml get --toml-path pyproject.toml project.version) &&
          uv run --dev toml set --toml-path pyproject.toml project.version $((version+1))

      - name: Build package
        run: uv build

      #   - name: Publish package on PyPI
      #     if: steps.check-version.outputs.tag
      #     uses: pypa/gh-action-pypi-publish@v1.5.0
      #     with:
      #       user: __token__
      #       password: ${{ secrets.PYPI_TOKEN }}

      #   - name: Publish package on TestPyPI
      #     if: "! steps.check-version.outputs.tag"
      #     uses: pypa/gh-action-pypi-publish@v1.5.0
      #     with:
      #       user: __token__
      #       password: ${{ secrets.TEST_PYPI_TOKEN }}
      #       repository_url: https://test.pypi.org/legacy/

      # TODO: Publish the package on GitHub Packages (private)

      - name: Publish the release notes
        uses: release-drafter/release-drafter@v5.20.0
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

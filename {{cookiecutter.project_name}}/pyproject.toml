[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.friendly_name}}"
authors = [{ name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}"}]
license = "{{cookiecutter.license}}"
readme = "README.md"
homepage = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
repository = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
documentation = "https://{{cookiecutter.project_name}}.readthedocs.io"
{% if cookiecutter.package_name != cookiecutter.project_name.replace('-', '_') -%}
packages = [
    { include = "{{cookiecutter.package_name}}", from = "src" },
]
{% endif -%}
classifiers = [
    "{{cookiecutter.development_status}}"
]
requires-python = ">=3.9"
dependencies = []

[project.urls]
"Homepage" = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
"Bug Reports" = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}/issues"
"Source" = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"

[dependency-groups]
dev = []

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.uv]
link-mode = "copy"

[tool.tox]
requires = ["tox>=4.24"]
env_list = ["3.9", "3.10", "3.11", "3.12", "3.13"]

[tool.tox.env_run_base]
description = "Run test under {base_python}"
command = ""

[tool.tox.env.type]
description = "run type check on code base"
deps = [
    "mypy==1.11.2",
    "types-cachetools>=5.5.0.20240820",
    "types-chardet>=5.0.4.6",
]
commands = [["mypy", "src{/}tox"], ["mypy", "tests"]]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.project_name}}", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.flake8]
rst-directives = "deprecated"
docstring-convention = "google"
per-file-ignores = "tests/*:S101"
rst-roles = ["class", "const", "func", "meth", "mod", "ref"]
ignore = ["E203", "E501", "RST201", "RST203", "RST301", "W503"]
select = ["B", "B9", "C", "D", "DAR", "E", "F", "N", "RST", "S", "W"]
max-line-length = 80
max-complexity = 10

[tool.darglint]
strictness = "long"

